[] 01. Descargar e instalar "git"
[] 02. Verificar que tiene instalado "git" con el comando
      >> git version
[] 03. Configurar sus datos en git, nombre y correo empleados en github 
      >> git config --global user.name "su_nombre"
      >> git config --global user.email "correo_git"
[] 04. Abrir el repositorio https://github.com/lsantiago/PythonIntermedio y realizar un Fork
[] 05. Clonar repositorio que se genero al realizar el Fork 
      >> git clone https://github.com/<su_usuario>/PythonIntermedio
[] 06. Acceder a la carpeta que se genero "PythonIntermedio"
      >> cd PythonIntermedio
[] 07. Crear branch (rama) para colaborar 
      git checkout -b <nombre_rama_sin_espacios> Ej.

      >> git checkout -b RegName
[] 08. Modificar archivo ListaColaboradores.py en la posición que corresponda.
[] 09. Agregar cambios
      >> git add .                   Para todos los archivos modificados
      >> git add nombre_archivo      Para un solo archivo 
[] 10. Registrar (commit) cambios en repositorio local
      git commit -m <comentario> Ej.
      
      >> git commit -m "Add Name Luis" 
[] 11. Llevar cambios a servidor remoto
      git push origin <nombre_rama> Ej.

      >> git push origin RegName
[] 12. Realizar pull request (En git hub), de servidor remoto "Fork" a servidor original 

[] 13. Traer nuevos cambios desde servidor original
       # Regresa a la rama principal
       git checkout master
       
       # Lista y agrega el servidor remoto original (sólo una vez)
       git remote -v
       git remote add upstream https://github.com/lsantiago/PythonIntermedio
       git remote -v

       % trae los ultimos cambios desde el servidor original (realizar de forma periodica)
       git pull upstream master

----------------------------------------------------------------------------------------------------------
Para nuevas colaboraciones repetir los 6 a 12.


----------------------------------------------------------------------------------------------------------
Durante clases
 
# generar nueva rama por cada clase. Ej.
git checkout -b ClaseNro5

# para descargar los cambios desde el servidor original
# moverse a la rama master
git checkout master
# descargar los cambios
git pull upstream master





REFERENCIAS DE USO DE GIT
- https://youtu.be/kEPF-MWGq1w
- https://youtu.be/7-JHoPyJy-Q
- https://youtu.be/lNBFt733izY [HERRAMIENTA GRÁFICA]